expr is similar to let except instead of saving the result to a variable it instead prints the answer. Unlike let you don't need to enclose the expression in quotes. You also must have spaces between the items of the expression. It is also common to use expr within command substitution to save the output to a variable.

expr item1 operator item2

Let's look at a simple example:
expr_example.sh

    #!/bin/bash
    # Basic arithmetic using expr
    expr 5 + 4
    expr "5 + 4"
    expr 5+4
    expr 5 \* $1
    expr 11 % 2
    a=$( expr 10 - 3 )
    echo $a # 7

Let's break it down:

    Line 4 - This is the basic format. Note that there must be spaces between the items and no quotes.
    Line 6 - If we do put quotes around the expression then the expression will not be evaluated but printed instead.
    Line 8 - If we do not put spaces between the items of the expression then the expression will not be evaluated but printed instead.
    Line 10 - Some characters have a special meaning to Bash so we must escape them (put a backslash in front of) to remove their special meaning.
    Line 12 - Here we demonstrate the operator modulus. The modulus is the remainder when the first item is divided by the second item.
    Line 14 - This time we're using expr within command substitution in order to save the result to the variable a.

    ./expr_example.sh 12
    9
    5 + 4
    5+4
    60
    1
    7
